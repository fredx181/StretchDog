#!/bin/bash
### BEGIN INIT INFO
# Provides:          frisbee wpa_supplicant
# Required-Start:    
# Required-Stop:     
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: Wireless authentication supplicant & DHCP client
# Description:       Daemons for ethernet and wireless networking - ensures wpa_supplicant ready before starting dhcpcd
### END INIT INFO

#140118 npierce: before starting dhcpcd, ensure wpa supplicant either is inactive (no enabled networks) or its network scan has completed.
#140224 Scooby: For restart, obtain and export saved wifi interface name.
#140531 rerwin: Add compatibility with DebianDog - INIT INFO, optional default file.

grep -q '^frisbee_mode=1' /etc/frisbee/frisbee.conf || exit

#set -x

[ -d /usr/local/frisbee ] && . /usr/local/frisbee/func || . /usr/lib/frisbee/func

[ -f /etc/default/frisbee ] && . /etc/default/frisbee #140531

if [ -h /etc/resolv.conf ] ; then  #pppoe creates a symlink
	rm /etc/resolv.conf
	touch /etc/resolv.conf
fi

if [[ $1 == "start" || $1 == '' ]] ; then

[ -d /tmp/.frisbee ] || mkdir /tmp/.frisbee
if grep -q '^announce_state_changes=1' /etc/frisbee/frisbee.conf; then
 [ ! -f /etc/dhcpcd_state_notify ] && touch /etc/dhcpcd_state_notify
elif grep -q '^announce_state_changes=0' /etc/frisbee/frisbee.conf; then
 [ -f /etc/dhcpcd_state_notify ] && rm -f /etc/dhcpcd_state_notify
fi

sleep 5

WIFACES=$(iwconfig 2>&1 |egrep "^[a-z]"|grep -v "no wireless" |cut -f1 -d" ")
echo -n "$WIFACES" > /etc/frisbee/interfaces #140303
if [ "$WIFACES" ];then #140224...
	[ -d /tmp/.network_tray ] \
	 && touch /tmp/.network_tray/use_wireless_control_menu_labels \
	 || touch /tmp/.network_tray-use_wireless_control_menu_labels
else
	[ -d /tmp/.network_tray ] \
	 && rm -f /tmp/.network_tray/use_wireless_control_menu_labels \
	 || rm -f /tmp/.network_tray-use_wireless_control_menu_labels
fi #140224 end

USERIF=`cat /etc/frisbee/userif 2>/dev/null`

if [ ! -z $USERIF ] && grep -q -w "$USERIF" /etc/frisbee/interfaces ; then
	WIFI_IF=$USERIF
else
	WIFI_IF=`echo -n "$WIFACES"|head  -n1` #140303
fi

if [[ $WIFI_IF == '' ]] ; then
	WIFI_IF=`cat /etc/frisbee/interface 2>/dev/null`
else
	echo -n $WIFI_IF > /etc/frisbee/interface #140303
fi


if [[ ! -z $WIFI_IF ]] ; then

	INTMODULE=$(readlink /sys/class/net/$WIFI_IF/device/driver/module)
	INTMODULE=${INTMODULE##*/}
	case "$INTMODULE" in
        	hostap*) DRIVER="hostap" ;;
         	rt61|rt73) DRIVER="ralink" ;;
         	*) DRIVER="wext" ;;
	esac
	[ -d /etc/acpi ] && echo "$INTMODULE" > /etc/acpi/wifi-driver

	export INTERFACE=$WIFI_IF

	#20140118 npierce: ensure wpa inactive or association/authentication complete...
	if [ "$WIFACES" ] \
	 && grep -q '^wireless_enabled=1' /etc/frisbee/frisbee.conf;then #140303
		WPAPAT="wpa_supplicant .*\-i *$INTERFACE "
		[ "$(ps | grep "$WPAPAT" | grep -v ' grep ')" = "" ] \
		 && start_wpa #in foreground
		COUNT=33
		while [ $(( COUNT-- )) -gt 0 ];do
			wpa_cli -i $INTERFACE status 2> /dev/null \
			 | grep -qE 'wpa_state=COMPLETED|wpa_state=INACTIVE' && break
			sleep 1
		done
        [ $COUNT -lt 0 ] && echo "frisbee: wpa scan failed to complete"
	fi #20140118 end
fi
start_dhcp&
fi


if [[ $1 == "stop" ]] ; then
	wpa_cli terminate 2>/dev/null
	dhcpcd -k
fi


if [[ $1 == "restart" ]] ; then
	WIFI_IF=`cat /etc/frisbee/interface 2>/dev/null` #140224...
	WIFACES=`cat /etc/frisbee/interfaces 2>/dev/null` #140303
	if [[ ! -z $WIFI_IF ]] && [[ ! -z "$WIFACES" ]] \
	 && grep -q '^wireless_enabled=1' /etc/frisbee/frisbee.conf ; then #140303
        export INTERFACE=$WIFI_IF #140224
		reset_wpa
		#20140118 npierce: ensure association/authentication complete...
		COUNT=33
		while [ $(( COUNT-- )) -gt 0 ];do
			wpa_cli -i $INTERFACE status 2> /dev/null \
			 | grep -qE 'wpa_state=COMPLETED|wpa_state=INACTIVE' && break
			sleep 1
		done
        [ $COUNT -lt 0 ] && echo "frisbee: wpa scan failed to complete" #20140118 end
	fi
	reset_dhcp
fi
