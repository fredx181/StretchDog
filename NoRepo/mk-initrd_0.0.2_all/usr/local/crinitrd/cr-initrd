#!/bin/bash

# Not running from terminal ?
tty -s;
if [ $? -ne 0 ]; then
	msg=" Please run this script from terminal"
	xmessage "`echo -e $msg`"
	exit 0
fi

if [ "`whoami`" != "root" ]; then
echo "This script should be run as root"
echo "Please run again, e.g. 'sudo ./cr-initrd', exiting now..."
sleep 3
exit
fi

echo "Create porteus-boot initrd1.xz and initrd.img"
if [ -z "$1" ]; then
echo "Kernels found in /lib/modules:"
echo "Note: the kernel you choose should have aufs included already"
ls /lib/modules
read -p "Type kernel version : " kernel
else
kernel=$1
fi

export LMK="lib/modules/$kernel"
# Check if aufs is included in the kernel, quit if not
AUFSBUILTIN=$(grep "/aufs.ko" /$LMK/modules.builtin 2> /dev/null)
if [ ! -f /$LMK/kernel/fs/aufs/aufs.ko -a -z "$AUFSBUILTIN" ]; then
echo "No aufs found in the kernel, cannot continue, exiting..."
read -s -n 1 -p "Press any key to quit . . ."
echo
exit
fi

. /etc/cryptsetup-initramfs/conf-hook
if [ "$CRYPTSETUP" = "" ]; then
echo "CRYPTSETUP=y" >> /etc/cryptsetup-initramfs/conf-hook
fi
echo f2fs >> /etc/initramfs-tools/modules
echo "Generating initramfs for $kernel . . ."
rm -fr /var/tmp/mkinitramfs*
mkinitramfs -k -o /dev/null $kernel

INITRAMFS=/tmp/initramfs-$RANDOM
mkdir $INITRAMFS
cp -a /usr/local/crinitrd/initramfs/* $INITRAMFS

mknod $INITRAMFS/dev/console c 5 1
mknod $INITRAMFS/dev/null c 1 3
mknod $INITRAMFS/dev/ram0 b 1 0
mknod $INITRAMFS/dev/tty1 c 4 1
mknod $INITRAMFS/dev/tty2 c 4 2
mknod $INITRAMFS/dev/tty3 c 4 3
mknod $INITRAMFS/dev/tty4 c 4 4

cp -a /var/tmp/mkinitramfs_*/lib/modules/* $INITRAMFS/lib/modules/

sleep 3
echo "Creating initrd1.xz . . ."
cd $INITRAMFS
find . -print | cpio -o -H newc 2>/dev/null | xz -f --extreme --check=crc32 > ../initrd1.xz
echo "Creating initrd.img . . ."
cd /var/tmp/mkinitramfs_*
find . -print | cpio -o -H newc 2>/dev/null | xz -f --extreme --check=crc32 > /tmp/initrd.img
rm -fr /var/tmp/mkinitramfs*
echo "Done ! /tmp/initrd1.xz /tmp/initrd.img"
rm -fr $INITRAMFS
read -s -n 1 -p "Press any key to close . . ."
